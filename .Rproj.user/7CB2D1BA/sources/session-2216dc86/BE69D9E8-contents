---
title: "MS201924-001 Data exploration"
author: "Rainer Strotmann"
date: "19-Dec-2023"
output:
  pdf_document:
    latex_engine: xelatex
  html_notebook: default
  word_document: default
---

```{r echo=F, warning=F, info=F, message=F}
library(tidyverse, quietly=T)
library(knitr)
# library(nif)
library(nlmixr2)

knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, fig.width=4,
                      fig.height=3, comment=NA)

theme_set(theme_bw())
nif_option(silent = T, watermark = "Not QCed!\nInternal\nuse only!",
           debug = T)
```

# STUDY OVERVIEW

* Part A1: Monotherapy dose escalation (N~60)
* Part A2: Preliminary food effect (N~12)
* Part A3: Monotherapy expansion in biomarker-selected tomors (ATM, ARID1A,
DAXX/ATRX, N~27-60)
* Part A4: Dose confirmation in Japanese subjects (N=6-12)
* Part A5: Dose confirmation in Chinese subjects (N=6-12)
* Part B1: Dose finding in combination with niraparib
* Part B2: Cohort expansion for niraparib combination in certain tumor
indications

```{r warning = F}
sdtm.001 <- read_sdtm("/Users/rainerstrotmann/Documents/Programming/R/nif-test/study data/MS201924-001/231012",
  domain = c("dm", "ex", "vs", "pc", "lb", "yl", "eg", "ec", "ae", "pp")) %>% 
  add_analyte_mapping("M1774", "M1774") %>% 
  add_analyte_mapping("NIRAPARIB", "NIRA")

food <- sdtm.001 %>% 
  domain("yl") %>% 
  # lubrify_dates() %>% 
  distinct(USUBJID, YLSTDY, YLSTDTC) %>% 
  mutate(FASTED = FALSE) #%>% 
  # decompose_dtc("YLSTDTC")

nif_option(silent = T, watermark = "not QCed", debug = T)

nif.001 <- new_nif() %>% 
  add_administration(sdtm.001, "M1774", debug = T) %>% 
  add_administration(sdtm.001, "NIRAPARIB", analyte = "NIRA", debug = T) %>%
  add_observation(sdtm.001, "pc", "M1774", duplicates = "resolve", debug = T) %>%
  add_observation(sdtm.001, "pc", "NIRA", debug = T) %>%
  add_observation(
    sdtm.001, "lb", "RBC", observation_filter = "LBCAT == 'HEMATOLOGY'",
    duplicates = "resolve", debug = T) %>% 
  add_observation(sdtm.001, "lb", "RETI", duplicates = "resolve", debug = T) %>%
  add_observation(sdtm.001, "lb", "HGB", duplicates = "resolve", debug = T) %>% 
  add_ae_observation(sdtm.001, "Anemia", ae_field = "AELLT") %>% 
  add_baseline(sdtm.001, "lb", "CREAT") %>% 
  add_baseline(sdtm.001, "lb", "HGB") %>% 
  add_baseline(sdtm.001, "pp", "AUCIFP", baseline_filter = "VISITDY == 1",
               observation_filter = "PPCAT == 'MSC2584415A'") %>% 
  # add_covariate(sdtm.001, "pp", "AUCIFP", observation_filter = "PPCAT == 'MSC2584415A'") %>% 
  add_bl_crcl() %>% 
  add_bl_renal() %>% 
  add_bl_odwg(sdtm.001) %>% 
  add_covariate(sdtm.001, "lb", "HGB") %>% 
  mutate(COHORT = str_sub(ACTARMCD, 1, 2)) %>%
  mutate(PART = str_sub(COHORT, 1, 1)) %>% 
  index_rich_sampling_intervals("M1774") %>% 
  left_join(food, by = c("USUBJID", "TRTDY" = "YLSTDY")) %>%
  # left_join(food, by = c("USUBJID", "DTC" = "YLSTDTC")) %>% 
  mutate(FASTED = case_when((EVID == 1 & FASTED == FALSE) ~ FALSE,
                          (EVID == 1 & is.na(FASTED) ~ TRUE))) %>% 
  group_by(ID) %>% 
  fill(FASTED, .direction = "downup") %>% 
  new_nif()
```

# DATA DISPOSITION

## Data

SDTM data as per the transfer from 12-Oct-2023, exported from MARVEL.

## Data cleaning

Automated check for correct date formats in EX: 

```{r message=T}
sdtm.001 %>%
  check_sdtm(verbose=F)

dummy <- sdtm.001 %>% domain("dm") %>% 
  select(USUBJID, DOMAIN, RFSTDTC, RFENDTC) %>% 
  check_date_format(verbose=T)
```

## Baseline characteristics over all parts

Automatic NIF summary:

```{r comment=NA, fig.width=3, fig.height=3}
print(summary(nif.001))
invisible(capture.output(
  plot(summary(nif.001), analytes = FALSE)
))
ht_by_wt(nif.001)
bmi_by_age(nif.001)
```

```{r comment=NA, fig.width=5, fig.height=5}
invisible(capture.output(plot(summary(nif.001), baseline = F)))
```

# MONOTHERAPY DOSE ESCALATION

Dose levels 5 mg and 10 mg with N = 1 are omitted:

```{r fig.width=6, fig.height=5}
nif.001 %>% 
  filter(COHORT == "A1") %>% 
  plot("M1774", max_time = 250, points = T, log = T, admin = "M1774",
       title="Part A1: M1774 plasma concentration overview")

nif.001 %>% 
  filter(COHORT == "A1") %>% 
  filter(RICH_N == 1) %>% 
  plot("M1774", log = T, mean = T, points = T, time = "NTIME",
       title="Part A1: M1774 plasma concentration overview (SD)")

nif.001 %>% 
  filter(COHORT == "A1") %>% 
  filter(RICH_N == 2) %>% 
  plot("M1774", log = T, mean = T, points = T, time = "NTIME",
       title="Part A1: M1774 plasma concentration overview (MD)")
```

## PK parameters

```{r fig.width=4, fig.height=4, message=F, warning=F}
nca <- nif.001 %>% 
  filter(COHORT=="A1") %>% 
  filter(!is.na(RICH_N)) %>% 
  nca(analyte="M1774", group = "RICH_N", keep=c("USUBJID", "DOSE", "BL_CRCL",
                                              "BL_RENAL", "SEX"))

nca <- nif.001 %>% 
  filter(COHORT == "A1") %>% 
  nca_from_pp(sdtm.001)
```

### M1774 PK parameter overview

```{r}
nca %>% 
  filter(RICH_N == 1) %>% 
  nca_summary_table() %>% 
  kable(col.names=c("dose (mg)", "N", "$AUC_{inf}$ (h*ug/ml)",
    "$AUC_{last}$ (h*ug/ml)", "$C_{max}$ (ug/ml)", "$t_{1/2}$ (h)", 
    "$t_{max}$ (h)"), caption="M1774 single-dose PK parameters")

nca %>% 
  filter(RICH_N==2) %>% 
  nca_summary_table() %>% 
  kable(col.names=c("dose (mg)", "N", "$AUC_{inf}$ (h*ug/ml)",
    "$AUC_{last}$ (h*ug/ml)", "$C_{max}$ (ug/ml)", "$t_{1/2}$ (h)", 
    "$t_{max}$ (h)"), caption="M1774 multiple-dose PK parameters")
```

## M1774 dose linearity

```{r fig.width=3, fig.height=3}
invisible(capture.output(
  nca_power_model(nca %>% filter(RICH_N == 1), c("aucinf.obs", "cmax"),
                  group = "SEX", title = "Single-dose")
))

invisible(capture.output(
  nca_power_model(nca %>% filter(RICH_N == 2), c("aucinf.obs", "cmax"),
                  group = "SEX", title = "Multiple-dose")
))
```

## Exposure by baseline renal function

```{r fig.width=5, fig.height=4}
nca %>%
  ggplot(aes(x = BL_CRCL, y = PPORRES/DOSE,
             color = as.factor(DOSE))) +
  geom_point(size = 3) +
  facet_wrap(~RICH_N, scales="free",
             labeller = labeller(RICH_N = function(x) c("SD", "MD")[as.numeric(x)])) +
  labs(caption="") +
  labs(color="dose (mg)", x = "baseline CrCL (ml/min)",
        y = "AUC/dose (h*ug/ml/mg") +
  scale_y_log10() +
  theme_bw() +
  theme(legend.position = "bottom") +
  ggtitle("Dose-normalized AUC by baseline CrCL")

nca %>% 
  filter(PPTESTCD == "aucinf.obs") %>% 
  ggplot(aes(x = BL_RENAL, y = PPORRES/DOSE)) +
  geom_boxplot() +
  theme_bw() +
  # scale_y_log10() +
  facet_wrap(~RICH_N, labeller = labeller(RICH_N = function(x) c("SD", "MD")[as.numeric(x)])) +
  labs(x = "", y = "AUC/dose (h*ug/ml/mg") +
  ggtitle("Nose-normalized AUC by baseline renal impairment") +
  watermark()

```

## M1774 accumulation

Single-dose (RICH_N=1) and multiple-dose (RICH_N=2) M1774 plasma concentration 
profiles for the 180 mg QD dose level.

```{r fig.width=4, fig.height=4}
nif.001 %>% 
  filter(!is.na(RICH_N)) %>% 
  filter(COHORT=="A1", DOSE == 180) %>% 
  plot(log = T, analyte="M1774", points = T, group="RICH_N", mean = T, max_time = 16,
       title="Part A1: 180 mg") 
```

# PRELIMINARY FOOD EFFECT FOR M1774

Data from Part A2. No effect of food on exposure:

```{r fig.width=3, fig.height=3, message=F, warning=F}
temp <- nif.001 %>% 
  filter(COHORT=="A2", ANALYTE=="M1774") %>% 
  as.data.frame() %>% 
  index_dosing_interval() %>% 
  filter(DI %in% c(1,2))

temp %>% 
  # filter(DI==2) %>% 
  plot(analyte="M1774", group="FASTED", time = "NTIME", mean = F, log = F,
       title="Part A2, preliminary food effect", points=F, max_time=15)

temp %>% 
  plot(analyte="M1774", group="FASTED", time = "NTIME", max_x=15, log = F,
       title="Part A2, preliminary food effect", mean=T)

nca <- temp %>% 
  nca(group="FASTED", analyte="M1774")

nca %>% 
  nca_summary_table(group="FASTED") %>% 
  kable(caption="Part A2: M1774 PK parameters")

nca %>% 
  filter(PPTESTCD %in% c("auclast", "cmax")) %>% 
  ggplot(aes(x=FASTED, y=PPORRES)) +
  geom_boxplot() +
  geom_point() +
  facet_wrap(~PPTESTCD, scales="free") +
  expand_limits(y=0) +
  theme_bw() +
  labs(caption="Median and IQR, AUC in h*ug/ml, Cmax in ug*ml") +
  ggtitle("Part A2: M1774 food effect")
```

# DOSE CONFIRMATION IN ASIAN SUBJECTS

* Cohort A1: Non-Asian
* Cohort A4: Japanese
* Cohort A5: Chinese

No exposure difference between the ethnic subgroups: 

```{r fig.width=4, fig.height=4, warning=F, message=F}
nif.001 %>% 
  filter(COHORT %in% c("A1", "A4", "A5")) %>% 
  filter(DOSE == 180) %>%
  plot(analyte="M1774", max_time = 16, log = T, group = "COHORT",
       mean = F, title = "Parts A1, A4, A5 (single-dose)")

nif.001 %>% 
  filter(DOSE==180) %>% 
  filter(COHORT %in% c("A1", "A4", "A5")) %>% 
  plot(analyte="M1774", max_time = 16, log = T, group="COHORT",
       mean = T, title = "Parts A1, A4, A5 (single-dose)")
```

```{r fig.width=4, fig.height=3, message=F, warning=F}
nca <- nif.001 %>% 
  index_dosing_interval() %>% 
  filter(COHORT %in% c("A1", "A4", "A5")) %>% 
  filter(DOSE == 180) %>% 
  filter(DI == 1) %>% 
  nca(group="COHORT", analyte="M1774")

nca %>% 
  filter(PPTESTCD %in% c("auclast", "cmax")) %>% 
  ggplot(aes(x=COHORT, y=PPORRES)) +
  geom_boxplot() +
  geom_point() +
  facet_wrap(~PPTESTCD, scales="free") +
  expand_limits(y=0) +
  theme_bw() +
  labs(caption="Exposure after single doses of 180 mg") +
  ggtitle("Parts A4, A5: Exposure in Asian subjects") +
  watermark()
```

## PopPK analysis

```{r}
library(nlmixr2)

one_cpt_model <- function() {
  ini({
    t.KA <- -0.8 # Ka
    t.Q <- 1.2 # Q
    t.CL <- 2 # CL
    t.VC <- 2 # Vc
    t.VP <- 2 # Cp
    t.ALAG1 <- -0.1
    
    eta.CL ~ 0.1 # IIV on CL
    eta.VC ~ 0.1 # IIV on Vc
    
    add.sd <- 0.7  
  })
  
  model({
    KA = exp(t.KA)
    Q = exp(t.Q)
    CL = exp(t.CL + eta.CL)
    VC = exp(t.VC + eta.VC)
    VP = exp(t.VP)
    ALAG1 = exp(t.ALAG1)
    
    linCmt() ~ add(add.sd)
  })
}

nif.poppk <- nif.001 %>% 
  filter(FASTED == T) %>%
  filter(ANALYTE == "M1774") %>% 
  filter(TAFD < 500) %>% 
  mutate(DV = DV/1000)

fit <- nlmixr2(one_cpt_model, nif.poppk, est = "focei",
              control = list(print = 1))
fit$parFixed %>%
  kable()   
```

```{r}
fit %>% 
  as.data.frame() %>% 
  ggplot(aes(x = DV, y = IPRED)) +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  scale_x_log10(limits = c(0.001, 10)) +
  scale_y_log10(limits = c(0.001, 10)) +
  geom_point(size = 3, alpha = 0.3) +
  geom_smooth(method = "lm")
```


# DOSE ESCALATION IN COMBINATION WITH NIRAPARIB

Data from Part B1.

```{r}
nif.b1 <- nif.001 %>% 
  filter(COHORT=="B1")

unclass(summary(nif.b1))[["dose_levels"]] %>%
  kable(caption="Part B1: Subjects by dose level")
```

## Niraparib plasma concentrations

```{r fig.width=4, fig.height=3}
nif.b1 %>% 
  plot(analyte = "NIRA", points = T, log = F,
       title="Part B1: Niraparib plasma concentrations")

nif.b1 %>% 
  # filter(TIME < 24) %>% 
  filter(DI == 1) %>% 
  plot(analyte="NIRA", points = T, log = F, max_time = 24, time = "TAFD",
       mean = F, admin = "NIRA",
       title="Part B1: Niraparib plasma concentrations")
```

## Niraparib PK parameter overview

```{r}
nca <- nif.b1 %>% 
  index_rich_sampling_intervals(analyte="NIRA") %>%
  filter(!is.na(RICH_N)) %>% 
  nca(analyte="NIRA", group="RICH_N", keep=c("USUBJID", "DOSE"))

nca %>% 
  filter(RICH_N==1) %>% 
  nca_summary_table() %>% 
  kable(col.names=c("dose (mg)", "N", "$AUC_{inf}$ (h*ug/ml)",
    "$AUC_{last}$ (h*ug/ml)", "$C_{max}$ (ug/ml)", "$t_{1/2}$ (h)", 
    "$t_{max}$ (h)"), caption="Niraparib PK after single-dose administration")

nca %>% 
  filter(RICH_N==2) %>% 
  nca_summary_table() %>% 
  kable(col.names=c("dose (mg)", "N", "$AUC_{inf}$ (h*ug/ml)",
    "$AUC_{last}$ (h*ug/ml)", "$C_{max}$ (ug/ml)", "$t_{1/2}$ (h)", 
    "$t_{max}$ (h)"), caption="Niraparib PK after multiple-dose administration")
```

## Niraparib dose linearity

```{r fig.width=3, fig.height=3, message=F, warning=F}
# temp <- nca %>% 
#   filter(PPTESTCD %in% c("cmax", "aucinf.obs", "half.life")) %>% 
#   group_by(DOSE, PPTESTCD, RICH_N) %>% 
#   summarize(mean=mean(PPORRES, na.rm=T), sd=sd(PPORRES, na.rm=T), .groups="drop") %>% 
#   mutate(cv=sd/mean*100) %>% 
#   mutate(value=paste0(as.character(format(round(mean, 3), nsmall=2)), " (", as.character(round(cv, 1)), "%)"))
# 
# temp %>% 
#   filter(RICH_N==1) %>% 
#   select(DOSE, PPTESTCD, value) %>% 
#   pivot_wider(names_from = "PPTESTCD", values_from = "value") %>% 
#   kable(caption="Niraparib SD PK parameter summary (Part B1)",
#         col.names = c("dose (mg)", "$AUC{inf}$ (h*ug/ml)", "$C_{max}$ (ug/ml)",
#                       "$t_{1/2}$ (h)"), align=rep('l', 4))
# 
# temp %>% 
#   filter(RICH_N==2) %>% 
#   select(DOSE, PPTESTCD, value) %>% 
#   pivot_wider(names_from = "PPTESTCD", values_from = "value") %>% 
#   kable(caption="Niraparib MD PK parameter summary (Part B1)",
#         col.names = c("dose (mg)", "$AUC{inf}$ (h*ug/ml)", "$C_{max}$ (ug/ml)",
#                       "$t_{1/2}$ (h)"),
#         align=rep('l', 4))


# nca %>% 
#   filter(PPTESTCD %in% c("auclast", "cmax")) %>%
#   ggplot(aes(x=DOSE, y=PPORRES)) +
#   geom_point(size=2, alpha=.4) +
#   geom_smooth(method="lm") +
#   facet_grid(PPTESTCD~RICH_N, scales="free") +
#   expand_limits(x=0, y=0) +
#   theme_bw() +
#   ggtitle("Part B1: Niraparib dose linearity") +
#   labs(caption="1: SD, 2: MD")
# 
# nca %>% 
#   filter(RICH_N==1) %>% 
#   dose_lin() %>% 
#   kable(caption="Part B1: Niraparib dose linearity (SD)", digits=3)
# 
# nca %>% 
#   filter(RICH_N==2) %>% 
#   dose_lin() %>% 
#   kable(caption="Part B1: Niraparib dose linearity (MD)", digits=3)

invisible(capture.output(
  nca_power_model(nca)
))
```

# PD BIOMARKERS

```{r}
nif.pd <- new_nif() %>% 
  add_administration(sdtm.001, "M1774") %>% 
  add_observation(sdtm.001, "PC", "M1774", analyte = "M1774", silent = s) %>% 
  add_observation(sdtm.001, "lb", "CA-153") %>% 
  add_observation(sdtm.001, "lb", "CA242") %>% 
  add_observation(sdtm.001, "lb", "CA72.4") %>% 
  add_observation(sdtm.001, "lb", "LYMC45") %>% 
  add_observation(sdtm.001, "lb", "CA125AG") %>% 
  add_observation(sdtm.001, "lb", "CA15_3AG") %>% 
  add_observation(sdtm.001, "lb", "CA19_9AG") %>% 
  add_observation(sdtm.001, "lb", "CA2729AG") %>% 
  add_observation(sdtm.001, "lb", "CEA") %>% 
  add_observation(sdtm.001, "lb", "LYMCH2AX") %>% 
  add_observation(sdtm.001, "lb", "HE4") %>% 
  add_observation(sdtm.001, "lb", "NSE") %>% 
  add_observation(sdtm.001, "lb", "PSA") 

invisible(capture.output(
  plot(summary(nif.pd))
))
```

```{r}
nif.pd %>% plot("CA19_9AG", 180, points = T, min_time = 0,
                time = "NTIME", lines = T, log = F, cfb = T) 
```

# SAFETY

# Hemoglobin

Hemoglobin over time across all parts:

```{r fig.width=6, fig.height=6}
nif.001 %>% 
  plot(analyte="HGB", mean=F, max_time = 5000, admin = "M1774",
       title="Hemoglobin overview") +
  labs(caption="Time axis truncated at 5000 h")

nif.001 %>% 
  plot(analyte="HGB")

nif.001 %>% 
  plot(analyte="RBC", mean=F, max_x=5000,
       title="Red blood cell count overview") +
  labs(caption="Time axis truncated at 5000 h")

nif.001 %>% 
  plot(analyte="RETI", mean=F, max_x=5000,
       title="Reticulocyte count overview") +
  labs(caption="Time axis truncated at 5000 h")
```

```{r fig.width=6, fig.height=4}
nif.001 %>% 
  add_cfb(baseline_filter = "TIME <= 0", summary_function = last) %>% 
  filter(DOSE == 180, ANALYTE == "HGB") %>% 
  ggplot(aes(x = TIME, y = DVCFB, group = ID)) +
  geom_line() +
  xlim(0, 3000) +
  theme(legend.position="none") +
  facet_wrap(~COHORT)+
  labs(caption="Time axis truncated at 3000 h") +
  theme_bw() +
  ggtitle("HGB change from baseline for 180 mg dose by cohort")


nif.001 %>% 
  add_cfb() %>% 
  filter(DOSE==180, ANALYTE=="RBC") %>% 
  ggplot(aes(x=TIME, y=DVCFB, group=ID)) +
  geom_line() +
  xlim(0, 3000) +
  theme(legend.position="none") +
  facet_wrap(~COHORT)+
  labs(caption="Time axis truncated at 3000 h") +
  theme_bw() +
  ggtitle("RBC change from baseline for 180 mg dose by cohort")

nif.001 %>% 
  add_cfb() %>% 
  filter(DOSE==180, ANALYTE=="RETI") %>% 
  ggplot(aes(x=TIME, y=DVCFB, group=ID)) +
  geom_line() +
  xlim(0, 3000) +
  theme(legend.position="none") +
  facet_wrap(~COHORT) +
  labs(caption="Time axis truncated at 3000 h") +
  theme_bw() +
  ggtitle("RETI change from baseline for 180 mg dose by cohort")
```

```{r fig.width=6, fig.height=3.5}
admin <- nif.001 %>% 
  as.data.frame() %>% 
  filter(EVID==1, ANALYTE=="M1774") %>% 
  mutate(ADMIN=T)

nif.001 %>% 
  add_cfb() %>% 
  filter(DOSE==180) %>% 
  filter(COHORT=="A3") %>%
  # filter(PART=="A") %>% 
  filter(EVID==0, ANALYTE=="RETI") %>% 
  ggplot(aes(x=TIME, y=DVCFB, group=ID)) +
  geom_vline(data=admin %>%
               filter(COHORT=="A3"),
             aes(xintercept=TIME, group=ID), color="red", alpha=0.2) +
  geom_line() +
  geom_point() +
  xlim(0, 1500) +
  facet_wrap(~COHORT) +
  theme_bw() +
  ggtitle("Cohort A3: RETI change from baseline") +
  labs(caption="red lines: M1774 administrations")


nif.001 %>% 
  add_cfb() %>% 
  filter(DOSE==180, COHORT=="A3") %>% 
  filter(EVID==0, ANALYTE=="RBC") %>% 
  ggplot(aes(x=TIME, y=DVCFB, group=ID)) +
  geom_vline(data=admin %>%
               filter(COHORT=="A3"),
             aes(xintercept=TIME, group=ID), color="red", alpha=0.2) +
  geom_line() +
  geom_point() +
  xlim(0, 1500) +
  facet_wrap(~COHORT) +
  theme_bw() +
  ggtitle("Cohort A3: RBC change from baseline") +
  labs(caption="red lines: M1774 administrations")
  
```

## Hepatotoxicity

```{r}
 nif.001 %>% 
  edish_plot(sdtm.001, show_labels = T)
```

## Adverse Events

```{r fig.width=6, fig.height=3}
temp <- nif.001 %>% 
  add_ae(sdtm.001, "Nausea") %>% 
  add_ae(sdtm.001, "Anaemia", ae_field = "AEDECOD")

temp %>% 
  plot("AE_Nausea", 180, points = T, lines = F)

temp %>% 
  plot("AE_Anaemia", points = T, lines = F)


# temp <- nif.001 %>% 
#   add_ae(sdtm.001, "3", ae_field = "AETOXGR")

```

# EXPORT

The NIF file was exported as "ms201924_001.nif".

```{r}
# export
nif.001 %>%
  # compress_nif(c(standard_nif_fields, "FASTED", "BL_HGB", "PART", "COHORT")) %>% 
  write_nif("/Users/rainerstrotmann/Documents/Programming/R/nif-test/nif_001.txt", 
            fields = c(standard_nif_fields, "PART", "COHORT", "FASTED", "BL_HGB"))
```

# ENVIRONMENT

```{r}
temp <- installed.packages()[names(sessionInfo()$otherPkgs), "Version"]
data.frame(package=names(temp), version=temp, row.names = NULL) %>% 
  kable(caption="Package versions")
```






























